// Compiled by ClojureScript 0.0-2138
goog.provide('lt.util.cljs');
goog.require('cljs.core');
goog.require('clojure.string');
goog.require('clojure.string');
cljs.core._STAR_print_fn_STAR_ = (function (x){if(cljs.core.truth_((function (){var and__3508__auto__ = x;if(cljs.core.truth_(and__3508__auto__))
{return (cljs.core.not_EQ_.call(null,x,"")) && (cljs.core.not_EQ_.call(null,x,"\n"));
} else
{return and__3508__auto__;
}
})()))
{return console.log(clojure.string.trim.call(null,x));
} else
{return null;
}
});
cljs.core.ChunkedCons.prototype.cljs$core$INext$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = (function (this$){var this$__$1 = this;return cljs.core._seq.call(null,cljs.core._rest.call(null,this$__$1));
});
(cljs.core.ISeqable["null"] = true);
(cljs.core._seq["null"] = (function (coll){return null;
}));
cljs.core.RSeq.prototype.cljs$core$INext$ = true;
cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = (function (this$){var this$__$1 = this;return cljs.core._seq.call(null,cljs.core._rest.call(null,this$__$1));
});
global.String.prototype.cljs$core$ISeqable$ = true;
global.String.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){var coll__$1 = this;if(cljs.core.truth_((function (){var and__3508__auto__ = coll__$1;if(cljs.core.truth_(and__3508__auto__))
{return !((coll__$1.length === 0));
} else
{return and__3508__auto__;
}
})()))
{return (new cljs.core.IndexedSeq((new String(coll__$1)),0));
} else
{return null;
}
});
global.String.prototype.cljs$core$IFn$ = true;
global.String.prototype.call = (function() {
var G__14582 = null;
var G__14582__2 = (function (self__,coll){var self____$1 = this;var this$ = self____$1;return cljs.core.get.call(null,coll,this$.toString());
});
var G__14582__3 = (function (self__,coll,not_found){var self____$1 = this;var this$ = self____$1;return cljs.core.get.call(null,coll,this$.toString(),not_found);
});
G__14582 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__14582__2.call(this,self__,coll);
case 3:
return G__14582__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
return G__14582;
})()
;
global.String.prototype.apply = (function (self__,args14581){var self____$1 = this;return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone.call(null,args14581)));
});
global.String.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){var this$ = this;return cljs.core.get.call(null,coll,this$.toString());
});
global.String.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){var this$ = this;return cljs.core.get.call(null,coll,this$.toString(),not_found);
});
global.String.prototype.apply = (function (s,args){if((args.length < 2))
{return cljs.core.get.call(null,(args[0]),s);
} else
{return cljs.core.get.call(null,(args[0]),s,(args[1]));
}
});
global.Array.prototype.cljs$core$ISeqable$ = true;
global.Array.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){var coll__$1 = this;if(cljs.core.truth_((function (){var and__3508__auto__ = coll__$1;if(cljs.core.truth_(and__3508__auto__))
{return !((coll__$1.length === 0));
} else
{return and__3508__auto__;
}
})()))
{return (new cljs.core.IndexedSeq(coll__$1,0));
} else
{return null;
}
});
/**
* @param {...*} var_args
*/
lt.util.cljs.__GT_dottedkw = (function() { 
var __GT_dottedkw__delegate = function (args){return cljs.core.keyword.call(null,clojure.string.join.call(null,".",cljs.core.map.call(null,cljs.core.name,cljs.core.filter.call(null,cljs.core.identity,args))));
};
var __GT_dottedkw = function (var_args){
var args = null;if (arguments.length > 0) {
  args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return __GT_dottedkw__delegate.call(this,args);};
__GT_dottedkw.cljs$lang$maxFixedArity = 0;
__GT_dottedkw.cljs$lang$applyTo = (function (arglist__14583){
var args = cljs.core.seq(arglist__14583);
return __GT_dottedkw__delegate(args);
});
__GT_dottedkw.cljs$core$IFn$_invoke$arity$variadic = __GT_dottedkw__delegate;
return __GT_dottedkw;
})()
;
/**
* @param {...*} var_args
*/
lt.util.cljs.js__GT_clj = (function() { 
var js__GT_clj__delegate = function (args){lt.objs.console.error("lt.util.cljs/js->clj is deprecated and will be removed in 0.9.0. Use js->clj instead");
return cljs.core.apply.call(null,cljs.core.js__GT_clj,args);
};
var js__GT_clj = function (var_args){
var args = null;if (arguments.length > 0) {
  args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return js__GT_clj__delegate.call(this,args);};
js__GT_clj.cljs$lang$maxFixedArity = 0;
js__GT_clj.cljs$lang$applyTo = (function (arglist__14584){
var args = cljs.core.seq(arglist__14584);
return js__GT_clj__delegate(args);
});
js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__delegate;
return js__GT_clj;
})()
;
lt.util.cljs.str_contains_QMARK_ = (function str_contains_QMARK_(str,x){return (str.indexOf(x) > -1);
});
lt.util.cljs.index_of = (function index_of(e,coll){return cljs.core.first.call(null,cljs.core.keep_indexed.call(null,(function (p1__14586_SHARP_,p2__14585_SHARP_){if(cljs.core._EQ_.call(null,e,p2__14585_SHARP_))
{return p1__14586_SHARP_;
} else
{return null;
}
}),coll));
});
