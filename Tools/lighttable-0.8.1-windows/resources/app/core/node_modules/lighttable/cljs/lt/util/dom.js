// Compiled by ClojureScript 0.0-2138
goog.provide('lt.util.dom');
goog.require('cljs.core');
lt.util.dom.lazy_nl_via_item = (function() {
var lazy_nl_via_item = null;
var lazy_nl_via_item__1 = (function (nl){return lazy_nl_via_item.call(null,nl,0);
});
var lazy_nl_via_item__2 = (function (nl,n){if((n < nl.length))
{return (new cljs.core.LazySeq(null,(function (){return cljs.core.cons.call(null,nl.item(n),lazy_nl_via_item.call(null,nl,(n + 1)));
}),null,null));
} else
{return null;
}
});
lazy_nl_via_item = function(nl,n){
switch(arguments.length){
case 1:
return lazy_nl_via_item__1.call(this,nl);
case 2:
return lazy_nl_via_item__2.call(this,nl,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
lazy_nl_via_item.cljs$core$IFn$_invoke$arity$1 = lazy_nl_via_item__1;
lazy_nl_via_item.cljs$core$IFn$_invoke$arity$2 = lazy_nl_via_item__2;
return lazy_nl_via_item;
})()
;
HTMLCollection.prototype.cljs$core$IIndexed$ = true;
HTMLCollection.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (this$,n){var this$__$1 = this;return this$__$1.item(n);
});
HTMLCollection.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (this$,n,not_found){var this$__$1 = this;var or__3520__auto__ = this$__$1.item(n);if(cljs.core.truth_(or__3520__auto__))
{return or__3520__auto__;
} else
{return not_found;
}
});
HTMLCollection.prototype.cljs$core$ICounted$ = true;
HTMLCollection.prototype.cljs$core$ICounted$_count$arity$1 = (function (this$){var this$__$1 = this;return this$__$1.length;
});
HTMLCollection.prototype.cljs$core$ISeqable$ = true;
HTMLCollection.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){var this$__$1 = this;return lt.util.dom.lazy_nl_via_item.call(null,this$__$1);
});
NodeList.prototype.cljs$core$IIndexed$ = true;
NodeList.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (this$,n){var this$__$1 = this;return this$__$1.item(n);
});
NodeList.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (this$,n,not_found){var this$__$1 = this;var or__3520__auto__ = this$__$1.item(n);if(cljs.core.truth_(or__3520__auto__))
{return or__3520__auto__;
} else
{return not_found;
}
});
NodeList.prototype.cljs$core$ICounted$ = true;
NodeList.prototype.cljs$core$ICounted$_count$arity$1 = (function (this$){var this$__$1 = this;return this$__$1.length;
});
NodeList.prototype.cljs$core$ISeqable$ = true;
NodeList.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){var this$__$1 = this;return lt.util.dom.lazy_nl_via_item.call(null,this$__$1);
});
lt.util.dom.text_node = (function text_node(text){return document.createTextNode(text);
});
lt.util.dom.$$ = (function() {
var $$ = null;
var $$__1 = (function (query){return $$.call(null,query,document);
});
var $$__2 = (function (query,elem){return elem.querySelectorAll(cljs.core.name.call(null,query));
});
$$ = function(query,elem){
switch(arguments.length){
case 1:
return $$__1.call(this,query);
case 2:
return $$__2.call(this,query,elem);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
$$.cljs$core$IFn$_invoke$arity$1 = $$__1;
$$.cljs$core$IFn$_invoke$arity$2 = $$__2;
return $$;
})()
;
lt.util.dom.$ = (function() {
var $ = null;
var $__1 = (function (query){return $.call(null,query,document);
});
var $__2 = (function (query,elem){return elem.querySelector(cljs.core.name.call(null,query));
});
$ = function(query,elem){
switch(arguments.length){
case 1:
return $__1.call(this,query);
case 2:
return $__2.call(this,query,elem);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
$.cljs$core$IFn$_invoke$arity$1 = $__1;
$.cljs$core$IFn$_invoke$arity$2 = $__2;
return $;
})()
;
lt.util.dom.append = (function append(parent,child){parent.appendChild(child);
return parent;
});
lt.util.dom.prepend = (function prepend(parent,child){if(cljs.core.truth_(parent.firstChild))
{return parent.insertBefore(child,parent.firstChild);
} else
{return lt.util.dom.append.call(null,parent,child);
}
});
lt.util.dom.add_class = (function add_class(elem,class$){if(cljs.core.truth_((function (){var and__3508__auto__ = elem;if(cljs.core.truth_(and__3508__auto__))
{return !(cljs.core.empty_QMARK_.call(null,cljs.core.name.call(null,class$)));
} else
{return and__3508__auto__;
}
})()))
{return elem.classList.add(cljs.core.name.call(null,class$));
} else
{return null;
}
});
lt.util.dom.remove_class = (function remove_class(elem,class$){if(cljs.core.truth_((function (){var and__3508__auto__ = elem;if(cljs.core.truth_(and__3508__auto__))
{return !(cljs.core.empty_QMARK_.call(null,cljs.core.name.call(null,class$)));
} else
{return and__3508__auto__;
}
})()))
{return elem.classList.remove(cljs.core.name.call(null,class$));
} else
{return null;
}
});
lt.util.dom.has_class_QMARK_ = (function has_class_QMARK_(elem,class$){if(cljs.core.truth_((function (){var and__3508__auto__ = elem;if(cljs.core.truth_(and__3508__auto__))
{return !(cljs.core.empty_QMARK_.call(null,cljs.core.name.call(null,class$)));
} else
{return and__3508__auto__;
}
})()))
{return elem.classList.contains(cljs.core.name.call(null,class$));
} else
{return null;
}
});
lt.util.dom.toggle_class = (function toggle_class(elem,class$){if(cljs.core.truth_(lt.util.dom.has_class_QMARK_.call(null,elem,class$)))
{return lt.util.dom.remove_class.call(null,elem,class$);
} else
{return lt.util.dom.add_class.call(null,elem,class$);
}
});
lt.util.dom.set_css = (function set_css(elem,things){var seq__14593 = cljs.core.seq.call(null,things);var chunk__14594 = null;var count__14595 = 0;var i__14596 = 0;while(true){
if((i__14596 < count__14595))
{var vec__14597 = cljs.core._nth.call(null,chunk__14594,i__14596);var k = cljs.core.nth.call(null,vec__14597,0,null);var v = cljs.core.nth.call(null,vec__14597,1,null);(elem.style[cljs.core.name.call(null,k)] = (((v instanceof cljs.core.Keyword))?cljs.core.name.call(null,v):v));
{
var G__14599 = seq__14593;
var G__14600 = chunk__14594;
var G__14601 = count__14595;
var G__14602 = (i__14596 + 1);
seq__14593 = G__14599;
chunk__14594 = G__14600;
count__14595 = G__14601;
i__14596 = G__14602;
continue;
}
} else
{var temp__4092__auto__ = cljs.core.seq.call(null,seq__14593);if(temp__4092__auto__)
{var seq__14593__$1 = temp__4092__auto__;if(cljs.core.chunked_seq_QMARK_.call(null,seq__14593__$1))
{var c__4262__auto__ = cljs.core.chunk_first.call(null,seq__14593__$1);{
var G__14603 = cljs.core.chunk_rest.call(null,seq__14593__$1);
var G__14604 = c__4262__auto__;
var G__14605 = cljs.core.count.call(null,c__4262__auto__);
var G__14606 = 0;
seq__14593 = G__14603;
chunk__14594 = G__14604;
count__14595 = G__14605;
i__14596 = G__14606;
continue;
}
} else
{var vec__14598 = cljs.core.first.call(null,seq__14593__$1);var k = cljs.core.nth.call(null,vec__14598,0,null);var v = cljs.core.nth.call(null,vec__14598,1,null);(elem.style[cljs.core.name.call(null,k)] = (((v instanceof cljs.core.Keyword))?cljs.core.name.call(null,v):v));
{
var G__14607 = cljs.core.next.call(null,seq__14593__$1);
var G__14608 = null;
var G__14609 = 0;
var G__14610 = 0;
seq__14593 = G__14607;
chunk__14594 = G__14608;
count__14595 = G__14609;
i__14596 = G__14610;
continue;
}
}
} else
{return null;
}
}
break;
}
});
lt.util.dom.css = (function css(elem,things){var things__$1 = ((cljs.core._EQ_.call(null,Object,cljs.core.type.call(null,things)))?cljs.core.js__GT_clj.call(null,things):things);if(cljs.core.map_QMARK_.call(null,things__$1))
{return lt.util.dom.set_css.call(null,elem,things__$1);
} else
{return (elem.style[cljs.core.name.call(null,things__$1)]);
}
});
lt.util.dom.set_attr = (function set_attr(elem,things){var seq__14617 = cljs.core.seq.call(null,things);var chunk__14618 = null;var count__14619 = 0;var i__14620 = 0;while(true){
if((i__14620 < count__14619))
{var vec__14621 = cljs.core._nth.call(null,chunk__14618,i__14620);var k = cljs.core.nth.call(null,vec__14621,0,null);var v = cljs.core.nth.call(null,vec__14621,1,null);elem.setAttribute(cljs.core.name.call(null,k),(((v instanceof cljs.core.Keyword))?cljs.core.name.call(null,v):v));
{
var G__14623 = seq__14617;
var G__14624 = chunk__14618;
var G__14625 = count__14619;
var G__14626 = (i__14620 + 1);
seq__14617 = G__14623;
chunk__14618 = G__14624;
count__14619 = G__14625;
i__14620 = G__14626;
continue;
}
} else
{var temp__4092__auto__ = cljs.core.seq.call(null,seq__14617);if(temp__4092__auto__)
{var seq__14617__$1 = temp__4092__auto__;if(cljs.core.chunked_seq_QMARK_.call(null,seq__14617__$1))
{var c__4262__auto__ = cljs.core.chunk_first.call(null,seq__14617__$1);{
var G__14627 = cljs.core.chunk_rest.call(null,seq__14617__$1);
var G__14628 = c__4262__auto__;
var G__14629 = cljs.core.count.call(null,c__4262__auto__);
var G__14630 = 0;
seq__14617 = G__14627;
chunk__14618 = G__14628;
count__14619 = G__14629;
i__14620 = G__14630;
continue;
}
} else
{var vec__14622 = cljs.core.first.call(null,seq__14617__$1);var k = cljs.core.nth.call(null,vec__14622,0,null);var v = cljs.core.nth.call(null,vec__14622,1,null);elem.setAttribute(cljs.core.name.call(null,k),(((v instanceof cljs.core.Keyword))?cljs.core.name.call(null,v):v));
{
var G__14631 = cljs.core.next.call(null,seq__14617__$1);
var G__14632 = null;
var G__14633 = 0;
var G__14634 = 0;
seq__14617 = G__14631;
chunk__14618 = G__14632;
count__14619 = G__14633;
i__14620 = G__14634;
continue;
}
}
} else
{return null;
}
}
break;
}
});
lt.util.dom.attr = (function attr(elem,things){if(cljs.core.map_QMARK_.call(null,things))
{return lt.util.dom.set_attr.call(null,elem,things);
} else
{return elem.getAttribute(cljs.core.name.call(null,things));
}
});
lt.util.dom.parent = (function parent(elem){return elem.parentNode;
});
lt.util.dom.children = (function children(elem){return elem.children;
});
lt.util.dom.remove = (function remove(elem){var temp__4092__auto__ = lt.util.dom.parent.call(null,elem);if(cljs.core.truth_(temp__4092__auto__))
{var p = temp__4092__auto__;return p.removeChild(elem);
} else
{return null;
}
});
lt.util.dom.empty = (function empty(elem){return elem.innerHTML = "";
});
/**
* @param {...*} var_args
*/
lt.util.dom.val = (function() { 
var val__delegate = function (elem,p__14635){var vec__14637 = p__14635;var v = cljs.core.nth.call(null,vec__14637,0,null);if(cljs.core.not.call(null,v))
{return elem.value;
} else
{return elem.value = v;
}
};
var val = function (elem,var_args){
var p__14635 = null;if (arguments.length > 1) {
  p__14635 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1),0);} 
return val__delegate.call(this,elem,p__14635);};
val.cljs$lang$maxFixedArity = 1;
val.cljs$lang$applyTo = (function (arglist__14638){
var elem = cljs.core.first(arglist__14638);
var p__14635 = cljs.core.rest(arglist__14638);
return val__delegate(elem,p__14635);
});
val.cljs$core$IFn$_invoke$arity$variadic = val__delegate;
return val;
})()
;
lt.util.dom.prevent = (function prevent(e){return e.preventDefault();
});
lt.util.dom.stop_propagation = (function stop_propagation(e){return e.stopPropagation();
});
lt.util.dom.siblings = (function siblings(elem){return lt.util.dom.parent.call(null,elem).children;
});
lt.util.dom.parents = (function parents(elem,sel){var root = lt.util.dom.parent.call(null,lt.util.dom.$.call(null,new cljs.core.Keyword(null,"body","body",1016933652)));var p = lt.util.dom.parent.call(null,elem);while(true){
if(cljs.core.truth_((function (){var and__3508__auto__ = p;if(cljs.core.truth_(and__3508__auto__))
{return cljs.core.not_EQ_.call(null,p,root);
} else
{return and__3508__auto__;
}
})()))
{if(cljs.core.truth_(p.webkitMatchesSelector(cljs.core.name.call(null,sel))))
{return p;
} else
{{
var G__14639 = lt.util.dom.parent.call(null,p);
p = G__14639;
continue;
}
}
} else
{return null;
}
break;
}
});
lt.util.dom.next = (function next(elem){return elem.nextElementSibling;
});
lt.util.dom.before = (function before(elem,neue){return lt.util.dom.parent.call(null,elem).insertBefore(neue,elem);
});
lt.util.dom.after = (function after(elem,neue){var temp__4090__auto__ = lt.util.dom.next.call(null,elem);if(cljs.core.truth_(temp__4090__auto__))
{var n = temp__4090__auto__;return lt.util.dom.before.call(null,n,neue);
} else
{return lt.util.dom.append.call(null,lt.util.dom.parent.call(null,elem),neue);
}
});
lt.util.dom.replace_with = (function replace_with(orig,neue){var temp__4092__auto__ = lt.util.dom.parent.call(null,orig);if(cljs.core.truth_(temp__4092__auto__))
{var p = temp__4092__auto__;return p.replaceChild(neue,orig);
} else
{return null;
}
});
lt.util.dom.height = (function height(elem){return elem.clientHeight;
});
lt.util.dom.width = (function width(elem){return elem.clientWidth;
});
lt.util.dom.scroll_width = (function scroll_width(elem){return elem.scrollWidth;
});
lt.util.dom.offset_top = (function offset_top(elem){return elem.offsetTop;
});
/**
* @param {...*} var_args
*/
lt.util.dom.scroll_top = (function() { 
var scroll_top__delegate = function (elem,p__14640){var vec__14642 = p__14640;var v = cljs.core.nth.call(null,vec__14642,0,null);if(cljs.core.not.call(null,v))
{return elem.scrollTop;
} else
{return elem.scrollTop = v;
}
};
var scroll_top = function (elem,var_args){
var p__14640 = null;if (arguments.length > 1) {
  p__14640 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1),0);} 
return scroll_top__delegate.call(this,elem,p__14640);};
scroll_top.cljs$lang$maxFixedArity = 1;
scroll_top.cljs$lang$applyTo = (function (arglist__14643){
var elem = cljs.core.first(arglist__14643);
var p__14640 = cljs.core.rest(arglist__14643);
return scroll_top__delegate(elem,p__14640);
});
scroll_top.cljs$core$IFn$_invoke$arity$variadic = scroll_top__delegate;
return scroll_top;
})()
;
lt.util.dom.top = (function top(elem){return lt.util.dom.css.call(null,elem,new cljs.core.Keyword(null,"top","top",1014019271));
});
lt.util.dom.bottom = (function bottom(elem){return lt.util.dom.css.call(null,elem,new cljs.core.Keyword(null,"bottom","bottom",3925642653));
});
lt.util.dom.left = (function left(elem){return lt.util.dom.css.call(null,elem,new cljs.core.Keyword(null,"left","left",1017222009));
});
lt.util.dom.right = (function right(elem){return lt.util.dom.css.call(null,elem,new cljs.core.Keyword(null,"right","right",1122416014));
});
/**
* @param {...*} var_args
*/
lt.util.dom.html = (function() { 
var html__delegate = function (elem,p__14644){var vec__14646 = p__14644;var h = cljs.core.nth.call(null,vec__14646,0,null);if(cljs.core.not.call(null,h))
{return elem.innerHTML;
} else
{return elem.innerHTML = h;
}
};
var html = function (elem,var_args){
var p__14644 = null;if (arguments.length > 1) {
  p__14644 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1),0);} 
return html__delegate.call(this,elem,p__14644);};
html.cljs$lang$maxFixedArity = 1;
html.cljs$lang$applyTo = (function (arglist__14647){
var elem = cljs.core.first(arglist__14647);
var p__14644 = cljs.core.rest(arglist__14647);
return html__delegate(elem,p__14644);
});
html.cljs$core$IFn$_invoke$arity$variadic = html__delegate;
return html;
})()
;
lt.util.dom.__GT_ev = (function __GT_ev(ev){return [cljs.core.str(cljs.core.name.call(null,ev))].join('');
});
/**
* @param {...*} var_args
*/
lt.util.dom.trigger = (function() { 
var trigger__delegate = function (elem,ev,p__14648){var vec__14650 = p__14648;var opts = cljs.core.nth.call(null,vec__14650,0,null);var e = document.createEvent("HTMLEvents");e.initEvent(cljs.core.name.call(null,ev),true,true);
e.opts = opts;
return elem.dispatchEvent(e);
};
var trigger = function (elem,ev,var_args){
var p__14648 = null;if (arguments.length > 2) {
  p__14648 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2),0);} 
return trigger__delegate.call(this,elem,ev,p__14648);};
trigger.cljs$lang$maxFixedArity = 2;
trigger.cljs$lang$applyTo = (function (arglist__14651){
var elem = cljs.core.first(arglist__14651);
arglist__14651 = cljs.core.next(arglist__14651);
var ev = cljs.core.first(arglist__14651);
var p__14648 = cljs.core.rest(arglist__14651);
return trigger__delegate(elem,ev,p__14648);
});
trigger.cljs$core$IFn$_invoke$arity$variadic = trigger__delegate;
return trigger;
})()
;
lt.util.dom.on = (function on(elem,ev,cb){return elem.addEventListener(lt.util.dom.__GT_ev.call(null,ev),cb);
});
lt.util.dom.off = (function off(elem,ev,cb){return elem.removeEventListener(lt.util.dom.__GT_ev.call(null,ev),cb);
});
lt.util.dom.on_STAR_ = (function on_STAR_(elem,evs){var seq__14658 = cljs.core.seq.call(null,evs);var chunk__14659 = null;var count__14660 = 0;var i__14661 = 0;while(true){
if((i__14661 < count__14660))
{var vec__14662 = cljs.core._nth.call(null,chunk__14659,i__14661);var ev = cljs.core.nth.call(null,vec__14662,0,null);var cb = cljs.core.nth.call(null,vec__14662,1,null);elem.addEventListener(lt.util.dom.__GT_ev.call(null,ev),cb);
{
var G__14664 = seq__14658;
var G__14665 = chunk__14659;
var G__14666 = count__14660;
var G__14667 = (i__14661 + 1);
seq__14658 = G__14664;
chunk__14659 = G__14665;
count__14660 = G__14666;
i__14661 = G__14667;
continue;
}
} else
{var temp__4092__auto__ = cljs.core.seq.call(null,seq__14658);if(temp__4092__auto__)
{var seq__14658__$1 = temp__4092__auto__;if(cljs.core.chunked_seq_QMARK_.call(null,seq__14658__$1))
{var c__4262__auto__ = cljs.core.chunk_first.call(null,seq__14658__$1);{
var G__14668 = cljs.core.chunk_rest.call(null,seq__14658__$1);
var G__14669 = c__4262__auto__;
var G__14670 = cljs.core.count.call(null,c__4262__auto__);
var G__14671 = 0;
seq__14658 = G__14668;
chunk__14659 = G__14669;
count__14660 = G__14670;
i__14661 = G__14671;
continue;
}
} else
{var vec__14663 = cljs.core.first.call(null,seq__14658__$1);var ev = cljs.core.nth.call(null,vec__14663,0,null);var cb = cljs.core.nth.call(null,vec__14663,1,null);elem.addEventListener(lt.util.dom.__GT_ev.call(null,ev),cb);
{
var G__14672 = cljs.core.next.call(null,seq__14658__$1);
var G__14673 = null;
var G__14674 = 0;
var G__14675 = 0;
seq__14658 = G__14672;
chunk__14659 = G__14673;
count__14660 = G__14674;
i__14661 = G__14675;
continue;
}
}
} else
{return null;
}
}
break;
}
});
lt.util.dom.active_element = (function active_element(){return document.activeElement;
});
lt.util.dom.focus = (function focus(elem){return elem.focus();
});
lt.util.dom.blur = (function blur(elem){return elem.blur();
});
lt.util.dom.selection = (function selection(elem,start,stop,dir){return elem.setSelectionRange(start,stop,dir);
});
lt.util.dom.make = (function make(str){var d = document.createElement("div");lt.util.dom.html.call(null,d,str);
return lt.util.dom.children.call(null,d);
});
lt.util.dom.index = (function index(e){var p = lt.util.dom.parent.call(null,e);var c = (cljs.core.truth_(p)?lt.util.dom.children.call(null,p):[]);var len = c.length;if(cljs.core.not.call(null,p))
{return -1;
} else
{var i = 0;while(true){
if((i >= len))
{return null;
} else
{if(cljs.core._EQ_.call(null,(c[i]),e))
{return i;
} else
{{
var G__14676 = (i + 1);
i = G__14676;
continue;
}
}
}
break;
}
}
});
lt.util.dom.ready = (function ready(func){return lt.util.dom.on.call(null,document,new cljs.core.Keyword(null,"DOMContentLoaded","DOMContentLoaded",3783578446),func);
});
lt.util.dom.fragment = (function fragment(items){var frag = document.createDocumentFragment();var seq__14681_14685 = cljs.core.seq.call(null,items);var chunk__14682_14686 = null;var count__14683_14687 = 0;var i__14684_14688 = 0;while(true){
if((i__14684_14688 < count__14683_14687))
{var i_14689 = cljs.core._nth.call(null,chunk__14682_14686,i__14684_14688);frag.appendChild(i_14689);
{
var G__14690 = seq__14681_14685;
var G__14691 = chunk__14682_14686;
var G__14692 = count__14683_14687;
var G__14693 = (i__14684_14688 + 1);
seq__14681_14685 = G__14690;
chunk__14682_14686 = G__14691;
count__14683_14687 = G__14692;
i__14684_14688 = G__14693;
continue;
}
} else
{var temp__4092__auto___14694 = cljs.core.seq.call(null,seq__14681_14685);if(temp__4092__auto___14694)
{var seq__14681_14695__$1 = temp__4092__auto___14694;if(cljs.core.chunked_seq_QMARK_.call(null,seq__14681_14695__$1))
{var c__4262__auto___14696 = cljs.core.chunk_first.call(null,seq__14681_14695__$1);{
var G__14697 = cljs.core.chunk_rest.call(null,seq__14681_14695__$1);
var G__14698 = c__4262__auto___14696;
var G__14699 = cljs.core.count.call(null,c__4262__auto___14696);
var G__14700 = 0;
seq__14681_14685 = G__14697;
chunk__14682_14686 = G__14698;
count__14683_14687 = G__14699;
i__14684_14688 = G__14700;
continue;
}
} else
{var i_14701 = cljs.core.first.call(null,seq__14681_14695__$1);frag.appendChild(i_14701);
{
var G__14702 = cljs.core.next.call(null,seq__14681_14695__$1);
var G__14703 = null;
var G__14704 = 0;
var G__14705 = 0;
seq__14681_14685 = G__14702;
chunk__14682_14686 = G__14703;
count__14683_14687 = G__14704;
i__14684_14688 = G__14705;
continue;
}
}
} else
{}
}
break;
}
return frag;
});
